version
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages(‘backports’)
install.packages('backports')
openssl@1.1
brew: openssl@1.1
install.packages("~/Desktop/devtools_2.2.2.tgz", repos = NULL, type = .Platform$pkgType)
library(devtools)
version
install.packages("~/Desktop/devtools_2.2.2.tgz", repos = NULL, type = .Platform$pkgType)
library(devtools)
install.packages('usethis')
library(devtools)
install.packages('memoise')
library(devtools)
install.packages('pkgbuild')
library(devtools)
library(pkgload)
library('pkgload')
library('pkgload')
install.packages('pkgload')
library(devtools)
install.packages('remotes')
library(devtools)
install.packages('sessioninfo')
library(devtools)
library(devtools)
library(ggbiplot)
install.packages('ggbiplot')
library('ggplot')
library(cluster)
df1 = read.csv("universities.csv",header = TRUE)
head(df1)
rownames(df1)=df1$University
df1 = df1[-c(1)]
head(df1)
library(cluster)
df1 = read.csv("universities.csv",header = TRUE)
head(df1)
rownames(df1)=df1$University
df1 = df1[-c(1)]
head(df1)
m1=prcomp(df1, scale=T)
names(m1)
summary(m1)
m1$rotation
m1$x
biplot(m1,scale=0,cex=0.6)
grid()
#mirror image
m1$rotation=-m1$rotation
m1$x=-m1$x
biplot(m1, scale=0,cex=0.6)
#abline(0,slope1)
grid()
#
rot=m1$rotation
slope1=rot[1,2]/rot[1,1]
slope1
abline(0,slope1)
# hclust()
#
# Euclidian distances of numeric columns only
df2 = df1[,c('SAT','Top10','Accept','SFRatio','Expenses','Grad')]
df = dist(df2)
length(df)
head(df)
dd = as.matrix(df)
dim(dd)
# daisy() to find distances even if columns are not numeric #
df2 = daisy(df1)
class(df2)
as.matrix(df2)[1:25,1:25]
#complete linkage
seg.hc = hclust(df2,method='complete')
plot(seg.hc,cex=0.4)
#
# cut at h=0.5
abline(h=0.5,col='red',lty=2)
cut(as.dendrogram(seg.hc),h=0.5)
# identigy the clusters
rect.hclust(seg.hc,k=4)
#single linkage
seg.hc = hclust(df2,method='single')
plot(seg.hc,cex=0.4)
#
# cut at h=0.5
abline(h=0.5,col='red',lty=2)
cut(as.dendrogram(seg.hc),h=0.5)
rect.hclust(seg.hc,k=4)
set.seed(2)
bb = c(-8,8)
km.out = kmeans(df1,4,nstart=20)
km.out
colors = km.out$cluster
plot(m1$x[,1],m1$x[,2],col=colors,pch=20,ylim=bb,xlim=bb,main='K-means with K=4 cluster
s')
d2 = read.csv("brands.csv",header = TRUE)
dim(d2)
head(d2)
rownames(d2) = d2[,1]
d22 = d2[-c(1,2)]
head(d22)
m2=prcomp(d22, scale=T)
m2
summary(m2)
m2$rotation
m2$x
library(devtools)
library(ggbiplot)
install.packages('ggbiplot')
library(devtools)
install_github("vqv/ggbiplot")
library(cluster)
df1 = read.csv("universities.csv",header = TRUE)
head(df1)
rownames(df1)=df1$University
df1 = df1[-c(1)]
head(df1)
m1=prcomp(df1, scale=T)
names(m1)
summary(m1)
m1$rotation
m1$x
biplot(m1,scale=0,cex=0.6)
grid()
#mirror image
m1$rotation=-m1$rotation
m1$x=-m1$x
biplot(m1, scale=0,cex=0.6)
#abline(0,slope1)
grid()
#
rot=m1$rotation
slope1=rot[1,2]/rot[1,1]
slope1
abline(0,slope1)
# hclust()
#
# Euclidian distances of numeric columns only
df2 = df1[,c('SAT','Top10','Accept','SFRatio','Expenses','Grad')]
df = dist(df2)
length(df)
head(df)
dd = as.matrix(df)
dim(dd)
# daisy() to find distances even if columns are not numeric #
df2 = daisy(df1)
class(df2)
as.matrix(df2)[1:25,1:25]
#complete linkage
seg.hc = hclust(df2,method='complete')
plot(seg.hc,cex=0.4)
#
# cut at h=0.5
abline(h=0.5,col='red',lty=2)
cut(as.dendrogram(seg.hc),h=0.5)
# identigy the clusters
rect.hclust(seg.hc,k=4)
#single linkage
seg.hc = hclust(df2,method='single')
plot(seg.hc,cex=0.4)
#
# cut at h=0.5
abline(h=0.5,col='red',lty=2)
cut(as.dendrogram(seg.hc),h=0.5)
rect.hclust(seg.hc,k=4)
set.seed(2)
bb = c(-8,8)
km.out = kmeans(df1,4,nstart=20)
km.out
colors = km.out$cluster
plot(m1$x[,1],m1$x[,2],col=colors,pch=20,ylim=bb,xlim=bb,main='K-means with K=4 cluster
s')
d2 = read.csv("brands.csv",header = TRUE)
dim(d2)
head(d2)
rownames(d2) = d2[,1]
d22 = d2[-c(1,2)]
head(d22)
m2=prcomp(d22, scale=T)
m2
summary(m2)
m2$rotation
m2$x
library(devtools)
library(ggbiplot)
library(cluster)
df1 = read.csv("universities.csv",header = TRUE)
head(df1)
rownames(df1)=df1$University
df1 = df1[-c(1)]
head(df1)
m1=prcomp(df1, scale=T)
names(m1)
summary(m1)
m1$rotation
m1$x
biplot(m1,scale=0,cex=0.6)
grid()
#mirror image
m1$rotation=-m1$rotation
m1$x=-m1$x
biplot(m1, scale=0,cex=0.6)
#abline(0,slope1)
grid()
#
rot=m1$rotation
slope1=rot[1,2]/rot[1,1]
slope1
abline(0,slope1)
# hclust()
#
# Euclidian distances of numeric columns only
df2 = df1[,c('SAT','Top10','Accept','SFRatio','Expenses','Grad')]
df = dist(df2)
length(df)
head(df)
dd = as.matrix(df)
dim(dd)
# daisy() to find distances even if columns are not numeric #
df2 = daisy(df1)
class(df2)
as.matrix(df2)[1:25,1:25]
#complete linkage
seg.hc = hclust(df2,method='complete')
plot(seg.hc,cex=0.4)
#
# cut at h=0.5
abline(h=0.5,col='red',lty=2)
cut(as.dendrogram(seg.hc),h=0.5)
# identigy the clusters
rect.hclust(seg.hc,k=4)
#single linkage
seg.hc = hclust(df2,method='single')
plot(seg.hc,cex=0.4)
#
# cut at h=0.5
abline(h=0.5,col='red',lty=2)
cut(as.dendrogram(seg.hc),h=0.5)
rect.hclust(seg.hc,k=4)
set.seed(2)
bb = c(-8,8)
km.out = kmeans(df1,4,nstart=20)
km.out
colors = km.out$cluster
plot(m1$x[,1],m1$x[,2],col=colors,pch=20,ylim=bb,xlim=bb,main='K-means with K=4 cluster
s')
d2 = read.csv("brands.csv",header = TRUE)
dim(d2)
head(d2)
rownames(d2) = d2[,1]
d22 = d2[-c(1,2)]
head(d22)
m2=prcomp(d22, scale=T)
m2
summary(m2)
m2$rotation
m2$x
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
library(devtools)
install_github("vqv/ggbiplot")
